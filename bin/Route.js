// Generated by CoffeeScript 1.4.0
(function() {
  var Database, EventEmitter, Route, parseQuery, url;

  EventEmitter = require('events').EventEmitter;

  url = require('url');

  Database = require('./Database.coffee');

  Route = new EventEmitter();

  Route.on('request-erro', function(req, res) {
    return res.end("Request : " + req.url + " Inv√°lido!");
  });

  Route.on('/get/coisas/mais-citadas', function(query, req, res) {
    return Database.emit('/table/coisas/mais-citadas', function(data) {
      return res.end(JSON.stringify(data) || "");
    });
  });

  Route.on('/get/coisas/by-id', function(query, req, res) {
    if ((query['id'] != null) && !(!parseInt(query['id'], 10))) {
      return Database.emit('/table/coisas/id', query['id'], function(data) {
        return res.end(JSON.stringify(data) || "");
      });
    } else {
      return Route.emit('request-erro', req, res);
    }
  });

  Route.on('/post/coisas/new', function(body, req, res) {
    if (req.method === 'POST') {
      if (body.coisa && body.coisa.length < 65) {
        if (!body.user || (body.user && body.user.length < 65)) {
          Database.emit('/table/coisas/insert', body);
          return res.end("1");
        } else {
          return res.end("0");
        }
      } else {
        return res.end("0");
      }
    } else {
      return Route.emit('request-erro', req, res);
    }
  });

  parseQuery = function(query) {
    var aux, obj, val, _i, _len, _ref;
    if (query == null) {
      query = "";
    }
    obj = Object.create({});
    _ref = query.split(/\&/);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      val = _ref[_i];
      aux = val.split("=");
      obj[aux[0]] = aux[1];
    }
    return obj;
  };

  Route.on('redirecionar-get', function(req, res) {
    var _query, _url;
    _url = url.parse(req.url);
    _query = parseQuery(_url.query);
    if (_url.pathname !== '/') {
      if (!Route.emit(_url.pathname, _query, req, res)) {
        return Route.emit('request-erro', req, res);
      }
    } else {
      return res.end("App 43coisas!");
    }
  });

  Route.on('redirecionar-post', function(body, req, res) {
    var _query, _url;
    _url = url.parse(req.url);
    _query = parseQuery(_url.query);
    if (_url.pathname !== '/') {
      if (!Route.emit(_url.pathname, body, req, res)) {
        return Route.emit('request-erro', req, res);
      }
    } else {
      return res.end("App 43coisas!");
    }
  });

  module.exports = Route;

}).call(this);
